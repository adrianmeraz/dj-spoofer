name: Dev Feature Pull Request
on:
  pull_request:
    branches:
      - dev
    paths:
      - '**.py'
      - '**.yml'

jobs:
  run:
    runs-on: ubuntu-20.04
    env:
      PYTHON: '3.8'
      DATABASE_URL: ${{secrets.DATABASE_URL}}
      DJANGO_SETTINGS_MODULE: ${{secrets.DJANGO_SETTINGS_MODULE}}
      LOGLEVEL: ${{secrets.LOGLEVEL}}
      PROXY_PASSWORD: ${{secrets.PROXY_PASSWORD}}
      PROXY_USERNAME: ${{secrets.PROXY_USERNAME}}
      PYTHONUNBUFFERED: ${{secrets.PYTHONUNBUFFERED}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
    services:
      postgres:
        image: postgres:13.4
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2
      with:
        fetch-depth: ‘2’

    - name: Setup Python
      uses: actions/setup-python@70e2063f710ccef775ec81349f16fb39eecee9ef # v2.2.2
      with:
        python-version: 3.8

    # https://www.peterbe.com/plog/install-python-poetry-github-actions-faster
    - name: Load cached ~/.local
      uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 #v2.1.6
      with:
        path: ~/.local
        key: dotlocal-${{ runner.os }}-${{ hashFiles('.github/workflows/dev-feature-pr.yml') }}

    - name: Install poetry
      uses: snok/install-poetry@44d50c1274bf7fe0860f5c0531e36c9092c15b23 # v1.2.1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cache-virtualenv
      uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # v2.1.6
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/dev-feature-pr.yml') }}

    - name: Install poetry dependencies
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'
      run: poetry install

    - name: Migrate database
      run: poetry run python manage.py migrate

    - name: Run Tests
      run: poetry run python manage.py test --settings=config.settings.dev --no-input
